javascript:(function(){if(document.getElementById('sticky-notes-styles'))return;const style=document.createElement('style');style.id='sticky-notes-styles';style.textContent='#add-note-btn{position:fixed;top:10px;left:10px;width:25px;height:25px;border-radius:50%;background-color:#4CAF50;color:white;border:none;font-size:12px;cursor:pointer;box-shadow:0 2px 5px rgba(0,0,0,0.2);z-index:10000}#add-note-btn:hover{background-color:#45a049}.note{position:absolute;width:200px;height:200px;background-color:#444;color:#eee;box-shadow:0 4px 8px rgba(0,0,0,0.1);border-radius:5px;padding:10px;resize:both;overflow:hidden;min-width:150px;min-height:150px;z-index:9999}.note.dragging{z-index:10001}.note{cursor:default}.note::before{content:"";position:absolute;top:0;left:0;right:0;height:15px;cursor:move;z-index:2}.close-btn{background:none;border:none;font-size:16px;cursor:pointer;color:#888;z-index:3;position:relative}.note-content{width:100%;height:calc(100% - 30px);border:none;resize:none;background:transparent;outline:none;font-family:Arial,sans-serif;font-size:14px;padding:5px 0;box-sizing:border-box;color:#eee}';document.head.appendChild(style);document.body.classList.add('sticky-dark-mode');const addNoteBtn=document.createElement('button');addNoteBtn.id='add-note-btn';addNoteBtn.title='Add new note (or press \\)';addNoteBtn.textContent='+';document.body.appendChild(addNoteBtn);loadNotes();addNoteBtn.addEventListener('click',()=>{createNote();});document.addEventListener('keydown',(e)=>{if(e.key==='\\'){e.preventDefault();createNote();}else if(e.key==='Escape'){const activeElement=document.activeElement;const currentNote=activeElement.closest('.note');if(currentNote){const notes=document.querySelectorAll('.note');currentNote.remove();saveNotes();if(notes.length>1){const lastNote=document.querySelectorAll('.note')[notes.length-2];const textarea=lastNote.querySelector('.note-content');textarea.focus();textarea.selectionStart=textarea.selectionEnd=textarea.value.length;}}}});function createNote(x,y){const note=document.createElement('div');note.className='note';if(x&&y){note.style.left=`${x}px`;note.style.top=`${y}px`;}else{note.style.left=`${Math.random()*(window.innerWidth-250)}px`;note.style.top=`${Math.random()*(window.innerHeight-250)}px`;}note.innerHTML='<textarea class="note-content" placeholder="Type here..." spellcheck="false"></textarea><button class="close-btn" style="position:absolute;top:0;right:0;">×</button>';document.body.appendChild(note);makeDraggable(note);const closeBtn=note.querySelector('.close-btn');closeBtn.addEventListener('click',()=>{note.remove();saveNotes();const notes=document.querySelectorAll('.note');if(notes.length>0){const lastNote=notes[notes.length-1];const textarea=lastNote.querySelector('.note-content');textarea.focus();textarea.selectionStart=textarea.selectionEnd=textarea.value.length;}});const textarea=note.querySelector('.note-content');textarea.addEventListener('input',saveNotes);setTimeout(()=>{textarea.focus();textarea.select();},10);}function makeDraggable(note){let isDragging=false;let startX,startY,startLeft,startTop;note.addEventListener('mousedown',(e)=>{if(e.offsetY<=15){isDragging=true;startX=e.clientX;startY=e.clientY;startLeft=parseInt(note.style.left)||0;startTop=parseInt(note.style.top)||0;note.classList.add('dragging');e.preventDefault();}});document.addEventListener('mousemove',(e)=>{if(!isDragging)return;const dx=e.clientX-startX;const dy=e.clientY-startY;note.style.left=`${startLeft+dx}px`;note.style.top=`${startTop+dy}px`;e.preventDefault();});document.addEventListener('mouseup',()=>{if(isDragging){isDragging=false;note.classList.remove('dragging');saveNotes();}});}function saveNotes(){const notes=document.querySelectorAll('.note');const notesData=[];notes.forEach(note=>{notesData.push({x:note.style.left,y:note.style.top,width:note.style.width,height:note.style.height,content:note.querySelector('.note-content').value});});localStorage.setItem('sticky-notes',JSON.stringify(notesData));}function loadNotes(){const savedNotes=localStorage.getItem('sticky-notes');if(savedNotes){try{const notesData=JSON.parse(savedNotes);notesData.forEach(noteData=>{const note=document.createElement('div');note.className='note';note.style.left=noteData.x;note.style.top=noteData.y;note.style.width=noteData.width;note.style.height=noteData.height;note.innerHTML=`<textarea class="note-content" spellcheck="false">${noteData.content||''}</textarea><button class="close-btn" style="position:absolute;top:0;right:0;">×</button>`;document.body.appendChild(note);makeDraggable(note);const closeBtn=note.querySelector('.close-btn');closeBtn.addEventListener('click',()=>{note.remove();saveNotes();const notes=document.querySelectorAll('.note');if(notes.length>0){const lastNote=notes[notes.length-1];const textarea=lastNote.querySelector('.note-content');textarea.focus();textarea.selectionStart=textarea.selectionEnd=textarea.value.length;}});note.querySelector('.note-content').addEventListener('input',saveNotes);});}catch(e){console.error('Failed to load notes:',e);}}}})();
